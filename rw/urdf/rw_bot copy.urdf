<?xml version="1.0"?>

<robot name="rw_bot" xmlns:xacro="http://www.ros.org/wiki/xacro">

    <xacro:property name="PI" value="3.14159265"/>
    <xacro:property name="wheel_radius" value="0.113"/> <!-- From DiffDrive plugin -->
    <xacro:property name="wheel_separation" value="0.554"/> <!-- From DiffDrive plugin -->

    <!-- MATERIALS -->
    <material name="white"> <color rgba="1 1 1 1"/> </material>
    <material name="gray"> <color rgba="0.7529 0.7529 0.7529 1"/> </material>
    <material name="blue"> <color rgba="0.2 0.2 1 1"/> </material>
    <material name="black"> <color rgba="0 0 0 1"/> </material>
    <material name="red"> <color rgba="1 0 0 1"/> </material>

    <!-- Robot footprint -->
    <link name="base_footprint"></link>

    <!-- Base Link -->
    <joint name="base_footprint_joint" type="fixed">
        <origin xyz="0 0 0" rpy="0 0 0" />
        <parent link="base_footprint"/>
        <child link="base_link" />
    </joint>

    <link name="base_link">
        <visual>
            <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 ${PI}"/>
            <geometry>
                <mesh filename="file://$(find rw)/meshes/base_link.stl" />
            </geometry>
            <material name="gray"/>
        </visual>
        <collision>
            <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 ${PI}"/>
            <geometry>
                 <mesh filename="file://$(find rw)/meshes/base_link.stl" />
            </geometry>
        </collision>
        <inertial>
            <!-- Trimesh Aluminum -->
            <mass value="108.1344"/>
            <origin xyz="-0.333425 0.076771 0.359841" rpy="0 0 0"/>
            <inertia ixx="10.676941" ixy="1.091112" ixz="4.978444"
                     iyy="13.959391" iyz="-1.583958"
                     izz="9.277521"/>
        </inertial>
    </link>
    <gazebo reference="base_link"> <mu1>1.0</mu1> <mu2>1.0</mu2> </gazebo>

    <!-- Left Wheel -->
    <link name="wheel_left_link">
        <visual>
            <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
            <geometry> <mesh filename="file://$(find rw)/meshes/left_wheel.stl"/> </geometry>
            <material name="black"/>
        </visual>
        <collision>
            <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
            <geometry> <mesh filename="file://$(find rw)/meshes/left_wheel.stl"/> </geometry>
        </collision>
        <inertial>
            <!-- Trimesh Rubber (1100 kg/m^3) -->
            <mass value="0.54077"/>
            <origin xyz="0.0 -0.025 0.0" rpy="0.0 0.0 0.0"/>
            <inertia ixx="0.0033" ixy="0.0" ixz="0.0" iyy="0.0055" iyz="0.0" izz="0.0033"/>
        </inertial>
    </link>
    <joint name="wheel_left_joint" type="continuous">
        <origin xyz="0.0 ${-wheel_separation/2} 0" rpy="0 0 0" />
        <parent link="base_link"/> <child link="wheel_left_link"/> <axis xyz="0 1 0"/>
        <limit effort="100" velocity="26.22"/>
        <dynamics damping="0.1" friction="0.1"/>
    </joint>
    <gazebo reference="wheel_left_link"> <mu1>1.0</mu1> <mu2>1.0</mu2> <material>Gazebo/Black</material> </gazebo>

    <!-- Right Wheel -->
    <link name="wheel_right_link">
        <visual>
            <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
            <geometry> <mesh filename="file://$(find rw)/meshes/right_wheel.stl"/> </geometry>
            <material name="black"/>
        </visual>
        <collision>
            <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
            <geometry> <mesh filename="file://$(find rw)/meshes/right_wheel.stl"/> </geometry>
        </collision>
        <inertial>
            <!-- Trimesh Rubber (1100 kg/m^3) -->
            <mass value="0.54077"/>
            <origin xyz="0.0 0.025 0.0" rpy="0.0 0.0 0.0"/>
            <inertia ixx="0.0033" ixy="0.0" ixz="0.0" iyy="0.0055" iyz="0.0" izz="0.0033"/>
        </inertial>
    </link>
    <joint name="wheel_right_joint" type="continuous">
        <origin xyz="0.0 ${wheel_separation/2} 0" rpy="0 0 0" />
        <parent link="base_link"/> <child link="wheel_right_link"/> <axis xyz="0 1 0"/>
        <limit effort="100" velocity="26.22"/>
        <dynamics damping="0.1" friction="0.1"/>
    </joint>
    <gazebo reference="wheel_right_link"> <mu1>1.0</mu1> <mu2>1.0</mu2> <material>Gazebo/Black</material> </gazebo>

    <!-- FRONT LEFT CASTER WHEEL LINK -->
    <link name="front_left_caster_wheel_link">
        <visual>
            <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
            <geometry> <mesh filename="file://$(find rw)/meshes/left_casterWheel.stl"/> </geometry>
            <material name="black"/>
        </visual>
        <collision>
            <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
            <geometry> <sphere radius="0.11"/> </geometry> <!-- Warning: Large radius -->
        </collision>
        <inertial>
            <!-- Estimated Nylon/ABS (1150 kg/m^3) -->
            <mass value="0.3064"/>
            <origin xyz="-0.018414 -0.00073 -0.044153" rpy="0.0 0.0 0.0"/>
            <!-- Inertia estimated via scaling Aluminum results -->
            <inertia ixx="0.000354" ixy="0.0"      ixz="-0.000042"
                     iyy="0.000475" iyz="0.0"
                     izz="0.000210"/>
        </inertial>
    </link>
    <joint name="front_left_caster_wheel_joint" type="fixed">
        <origin xyz="0.6490525 0.2152957 -0.0024993" rpy="0 0 0"/>
        <parent link="base_link"/> <child link="front_left_caster_wheel_link"/>
    </joint>
    <gazebo reference="front_left_caster_wheel_link"> <mu1>0.01</mu1> <mu2>0.01</mu2> <material>Gazebo/Black</material> </gazebo>

    <!-- FRONT RIGHT CASTER WHEEL LINK-->
    <link name="front_right_caster_wheel_link">
         <visual>
             <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
             <geometry> <mesh filename="file://$(find rw)/meshes/right_casterWheel.stl"/> </geometry>
             <material name="black"/>
         </visual>
         <collision>
             <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
             <geometry> <sphere radius="0.11"/> </geometry> <!-- Warning: Large radius -->
         </collision>
         <inertial>
             <!-- Assumed identical to left caster -->
             <!-- Estimated Nylon/ABS (1150 kg/m^3) -->
             <mass value="0.3064"/>
             <!-- Assuming mesh is mirrored, CoM X/Z same, Y flips sign -->
             <origin xyz="-0.018414 0.00073 -0.044153" rpy="0.0 0.0 0.0"/>
             <!-- Assuming mesh is mirrored, inertia tensor might change slightly (cross products flip), using left's as estimate -->
             <!-- Note: Flipped ixz sign compared to left wheel's estimate based on mirrored geometry assumption -->
             <inertia ixx="0.000354" ixy="0.0"      ixz="0.000042" <!-- This was the fix - comment moved -->
                      iyy="0.000475" iyz="0.0"
                      izz="0.000210"/>
         </inertial>
     </link>
     <joint name="front_right_caster_wheel_joint" type="fixed">
         <origin xyz="0.6490525 -0.2152957 -0.0024993" rpy="0 0 0"/>
         <parent link="base_link"/> <child link="front_right_caster_wheel_link"/>
     </joint>
     <gazebo reference="front_right_caster_wheel_link"> <mu1>0.01</mu1> <mu2>0.01</mu2> <material>Gazebo/Black</material> </gazebo>

    <!-- Back CAMERA -->
     <link name="back_camera_link">
         <visual> <geometry> <mesh filename="file://$(find rw)/meshes/back_camera.stl"/> </geometry> <material name="blue"/> </visual>
         <collision> <origin xyz="0 0 0" rpy="0 0 0"/> <geometry> <mesh filename="file://$(find rw)/meshes/back_camera.stl"/> </geometry> </collision>
         <inertial> <mass value="0.1"/> <origin xyz="0 0 0" rpy="0 0 0"/> <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/> </inertial>
     </link>
     <joint name="back_camera_joint" type="fixed">
         <parent link="base_link"/> <child link="back_camera_link"/> <origin xyz="-0.0431295 0 0.1042074" rpy="0 0 0"/>
     </joint>
     <link name="back_camera_link_optical"/>
     <joint name="back_camera_optical_joint" type="fixed">
         <parent link="back_camera_link"/> <child link="back_camera_link_optical"/>
         <!-- Standard Optical Frame: Z-forward, X-right, Y-down -->
         <origin xyz="-0.0621685 0 -0.0048553" rpy="${-PI/2} 0 ${-PI/2}"/>
     </joint>
     <gazebo reference="back_camera_link">
         <sensor name="back_depth_camera" type="depth_camera"> <!-- Changed name and type -->
             <camera name="back_camera"> <!-- Added camera name -->
                 <horizontal_fov>1.9</horizontal_fov> <image> <width>640</width> <height>480</height> </image> <clip> <near>0.1</near> <far>10.0</far> </clip>
             </camera>
             <always_on>1</always_on> <update_rate>20</update_rate> <visualize>true</visualize>
             <topic>back_camera/image_raw</topic>
             <depth_camera>
                 <topic>back_camera/depth/image_raw</topic>
                 <point_cloud_topic>back_camera/points</point_cloud_topic> <!-- Point cloud topic -->
                 <point_cloud_cutoff>0.1</point_cloud_cutoff> <!-- Optional cutoff -->
                 <point_cloud_cutoff_max>10.0</point_cloud_cutoff_max>
             </depth_camera>
            <frame_name>back_camera_link_optical</frame_name> <!-- Moved frame_name here -->
         </sensor>
     </gazebo>

     <!-- Pan and tile kit -->
     <link name="panAndTile_kit">
         <visual> <origin xyz="0 0 0" rpy="0 0 0"/> <geometry> <mesh filename="file://$(find rw)/meshes/panAndTile_kit.stl"/> </geometry> <material name="red"/> </visual>
         <collision> <origin xyz="0 0 0" rpy="0 0 0"/> <geometry> <mesh filename="file://$(find rw)/meshes/panAndTile_kit.stl"/> </geometry> </collision>
         <inertial> <mass value="0.5"/> <origin xyz="0 0 0" rpy="0 0 0"/> <inertia ixx="1e-4" ixy="0" ixz="0" iyy="1e-4" iyz="0" izz="1e-4"/> </inertial>
     </link>
     <joint name="panAndTile_kit_joint" type="revolute"> <!-- Changed to 'revolute' assuming only pan -->
         <origin xyz="0.6622757 0.0 0.7159456" rpy="0 0 0"/> <parent link="base_link"/> <child link="panAndTile_kit"/> <axis xyz="0 0 1"/>
         <!-- Added plausible limits for revolute joint -->
         <limit effort="10" velocity="2.0" lower="${-PI}" upper="${PI}"/>
         <dynamics damping="0.1" friction="0.1"/>
     </joint>
     <gazebo reference="panAndTile_kit"> <mu1>1.0</mu1> <mu2>1.0</mu2> </gazebo>

     <!-- front CAMERA -->
     <link name="front_camera_link">
         <visual> <geometry> <mesh filename="file://$(find rw)/meshes/front_camera.stl"/> </geometry> <material name="blue"/> </visual>
         <collision> <origin xyz="0 0 0" rpy="0 0 0"/> <geometry> <mesh filename="file://$(find rw)/meshes/front_camera.stl"/> </geometry> </collision>
          <inertial> <mass value="0.1"/> <origin xyz="0 0 0" rpy="0 0 0"/> <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/> </inertial>
     </link>
     <joint name="front_camera_joint" type="fixed">
         <parent link="panAndTile_kit"/> <child link="front_camera_link"/> <origin xyz="0.0 0.0 0.01" rpy="0 0 0"/>
     </joint>
     <link name="front_camera_link_optical"/>
     <joint name="front_camera_optical_joint" type="fixed">
         <parent link="front_camera_link"/> <child link="front_camera_link_optical"/>
         <origin xyz="0.0202968 0 0.0228071" rpy="${-PI/2} 0 ${-PI/2}"/> <!-- Standard Optical Frame RPY -->
     </joint>
      <gazebo reference="front_camera_link">
         <sensor name="front_depth_camera" type="depth_camera"> <!-- Changed name and type -->
             <camera name="front_camera"> <!-- Added camera name -->
                 <horizontal_fov>1.25</horizontal_fov> <image> <width>640</width> <height>480</height> </image> <clip> <near>0.3</near> <far>15</far> </clip>
             </camera>
             <always_on>1</always_on> <update_rate>20</update_rate> <visualize>true</visualize>
             <topic>front_camera/image_raw</topic>
              <depth_camera>
                  <topic>front_camera/depth/image_raw</topic>
                  <point_cloud_topic>front_camera/points</point_cloud_topic>
                  <point_cloud_cutoff>0.3</point_cloud_cutoff>
                  <point_cloud_cutoff_max>15.0</point_cloud_cutoff_max>
              </depth_camera>
              <frame_name>front_camera_link_optical</frame_name>
         </sensor>
     </gazebo>

     <!-- LIDAR -->
     <link name="laser_frame">
         <visual> <geometry> <mesh filename="file://$(find rw)/meshes/lidar.stl"/> </geometry> <material name="white"/> </visual>
         <collision> <geometry> <mesh filename="file://$(find rw)/meshes/lidar.stl"/> </geometry> </collision>
         <inertial> <mass value="0.2"/> <origin xyz="0 0 0" rpy="0 0 0"/> <inertia ixx="1e-5" ixy="0" ixz="0" iyy="1e-5" iyz="0" izz="1e-5"/> </inertial>
     </link>
     <joint name="laser_joint" type="fixed">
         <parent link="panAndTile_kit"/> <child link="laser_frame"/> <origin xyz="0.0 0.0 0.0556141" rpy="0 0 0"/>
     </joint>
     <!-- Note: Lidar optical frame often not needed if sensor outputs in physical frame -->
     <!-- <link name="lidar_link_optical"/> -->
     <!-- <joint name="lidar_optical_joint" type="fixed"> -->
         <!-- <parent link="laser_frame"/> <child link="lidar_link_optical"/> <origin xyz="0.025 0 0.03" rpy="${-PI/2} 0 ${-PI/2}"/> -->
     <!-- </joint> -->
     <gazebo reference="laser_frame">
        <sensor name="gpu_lidar" type="gpu_lidar">
            <topic>scan</topic>
            <update_rate>10</update_rate>
            <lidar>
                <scan>
                    <horizontal>
                        <samples>720</samples> <resolution>1</resolution> <min_angle>${-PI}</min_angle> <max_angle>${PI}</max_angle>
                    </horizontal>
                </scan>
                <range> <min>0.1</min> <max>30.0</max> <resolution>0.01</resolution> </range>
                <noise> <type>gaussian</type> <mean>0.0</mean> <stddev>0.01</stddev> </noise>
            </lidar>
            <always_on>1</always_on>
            <visualize>true</visualize>
            <!-- Use the physical frame_id for laser scan data -->
            <frame_id>laser_frame</frame_id>
            <radiation_type>infrared</radiation_type>
         </sensor>
     </gazebo>

    <!-- IMU -->
    <link name="imu_link">
         <inertial> <mass value="0.01"/> <origin xyz="0 0 0" rpy="0 0 0"/> <inertia ixx="1e-7" ixy="0" ixz="0" iyy="1e-7" iyz="0" izz="1e-7"/> </inertial>
         <visual> <geometry> <box size="0.01 0.01 0.01"/> </geometry> <material name="red"/> </visual>
         <collision> <geometry> <box size="0.01 0.01 0.01"/> </geometry> </collision>
    </link>
    <joint name="imu_joint" type="fixed">
        <origin xyz="0 0 0.1" rpy="0 0 0" />
        <parent link="base_link"/> <child link="imu_link" />
    </joint>
    <gazebo reference="imu_link">
        <sensor name="imu_sensor" type="imu">
            <always_on>1</always_on> <update_rate>100</update_rate> <visualize>false</visualize> <topic>imu/data</topic>
            <imu>
                <angular_velocity> <x><noise type="gaussian"><mean>0.0</mean><stddev>2e-4</stddev><bias_mean>0.0000075</bias_mean><bias_stddev>0.0000008</bias_stddev></noise></x> <y><noise type="gaussian"><mean>0.0</mean><stddev>2e-4</stddev><bias_mean>0.0000075</bias_mean><bias_stddev>0.0000008</bias_stddev></noise></y> <z><noise type="gaussian"><mean>0.0</mean><stddev>2e-4</stddev><bias_mean>0.0000075</bias_mean><bias_stddev>0.0000008</bias_stddev></noise></z> </angular_velocity>
                <linear_acceleration> <x><noise type="gaussian"><mean>0.0</mean><stddev>1.7e-2</stddev><bias_mean>0.1</bias_mean><bias_stddev>0.001</bias_stddev></noise></x> <y><noise type="gaussian"><mean>0.0</mean><stddev>1.7e-2</stddev><bias_mean>0.1</bias_mean><bias_stddev>0.001</bias_stddev></noise></y> <z><noise type="gaussian"><mean>0.0</mean><stddev>1.7e-2</stddev><bias_mean>0.1</bias_mean><bias_stddev>0.001</bias_stddev></noise></z> </linear_acceleration>
            </imu>
        </sensor>
    </gazebo>

    <!-- GPS -->
    <link name="navsat_link">
        <inertial> <mass value="0.01"/> <origin xyz="0 0 0" rpy="0 0 0"/> <inertia ixx="1e-7" ixy="0" ixz="0" iyy="1e-7" iyz="0" izz="1e-7"/> </inertial>
        <visual> <geometry> <box size="0.02 0.02 0.01"/> </geometry> <material name="blue"/> </visual>
        <collision> <geometry> <box size="0.02 0.02 0.01"/> </geometry> </collision>
    </link>
    <joint name="navsat_joint" type="fixed">
        <origin xyz="0.1 0 0.1" rpy="0 0 0" />
        <parent link="base_link"/> <child link="navsat_link" />
    </joint>
    <gazebo reference="navsat_link">
        <sensor name="navsat_sensor" type="navsat">
            <always_on>1</always_on> <update_rate>1</update_rate> <topic>/gps/fix</topic>
            <position_sensing> <horizontal_noise> <mean>0</mean> <stddev>2.5</stddev> </horizontal_noise> <vertical_noise> <mean>0</mean> <stddev>5.0</stddev> </vertical_noise> </position_sensing>
            <velocity_sensing> <horizontal_noise> <mean>0</mean> <stddev>0.1</stddev> </horizontal_noise> <vertical_noise> <mean>0</mean> <stddev>0.2</stddev> </vertical_noise> </velocity_sensing>
        </sensor>
    </gazebo>

    <!-- Gazebo Plugins -->
    <gazebo>
        <plugin filename="gz-sim-diff-drive-system" name="gz::sim::systems::DiffDrive">
            <topic>cmd_vel</topic>
            <left_joint>wheel_left_joint</left_joint>
            <right_joint>wheel_right_joint</right_joint>
            <wheel_separation>${wheel_separation}</wheel_separation>
            <wheel_radius>${wheel_radius}</wheel_radius>
            <max_linear_velocity>2.96</max_linear_velocity>
            <min_linear_velocity>-2.96</min_linear_velocity>
            <max_angular_velocity>10.69</max_angular_velocity>
            <min_angular_velocity>-10.69</min_angular_velocity>
            <max_linear_acceleration>10.0</max_linear_acceleration>
            <min_linear_acceleration>-10.0</min_linear_acceleration>
            <max_angular_acceleration>20.0</max_angular_acceleration>
            <min_angular_acceleration>-20.0</min_angular_acceleration>
            <odom_topic>odom</odom_topic>
            <tf_topic>tf</tf_topic>
            <frame_id>odom</frame_id>
            <child_frame_id>base_footprint</child_frame_id>
            <odom_publish_frequency>50</odom_publish_frequency>
        </plugin>

        <plugin filename="gz-sim-joint-state-publisher-system" name="gz::sim::systems::JointStatePublisher">
            <topic>joint_states</topic>
            <joint_name>wheel_left_joint</joint_name>
            <joint_name>wheel_right_joint</joint_name>
            <joint_name>panAndTile_kit_joint</joint_name>
        </plugin>
    </gazebo>
</robot>